package root;

import java.util.*;

/**
 * @author  Gwenaël
 * @date    28/08/2020
 * @version 1
 */

public class Employe extends Personne
{
	/*** CST d'instance ***/
	private final GregorianCalendar dateEmbauche;
	
	/*** Attributs d'instance ***/
	private float salaire;
	
	/*** Constructors ***/
	/**
	 * Constructeur
	 * @param hPersonne
	 * @param embauche Date d'embauche
	 * @param salaire Salaire de l'employe
	 */
	protected Employe(Personne hPersonne, GregorianCalendar embauche, float salaire)
	{
		super(hPersonne);
		this.dateEmbauche = embauche;
		this.salaire = salaire;
	}
	
	/***
	 * Constructeur par recopie
	 * @param hEmploye Objet à copier
	 */
	protected Employe(Employe hEmploye)
	{
		super(hEmploye.nom, hEmploye.prenom, hEmploye.dateNaissance, hEmploye.adresse);
		this.dateEmbauche = hEmploye.dateEmbauche;
		this.salaire = hEmploye.salaire;
	}
	
	/*** Accesseur et mutateurs ***/
	public float getSalaire()
	{ return this.salaire; }

	public GregorianCalendar getDateEmbauche()
	{ return this.dateEmbauche; }
	
	/*** Class Methods ***/
	public static Employe createEmploye(Personne hPersonne, GregorianCalendar embauche, float salaire)
	{
		Employe toReturn = null;
		
		if(embauche.get(Calendar.YEAR) > (hPersonne.getDateNaissance().get(Calendar.YEAR) + 16) &&
				embauche.get(Calendar.YEAR) < (hPersonne.getDateNaissance().get(Calendar.YEAR) + 65))
			toReturn = new Employe(hPersonne, embauche, salaire);
		
		return toReturn;
	}
	
	/*** Instance methods ***/
	/***
	 * Augmente/diminue le salaire
	 * @param percentage Taux d'augmentation (> 0) ou de diminution (< 0)
	 */
	public void augmenteSalaire(float percentage)
	{
		if(percentage > 0)
			this.salaire = this.salaire*(1 + percentage/100);
		else if(percentage < 0)
			this.salaire = this.salaire*(1 - percentage/100);
	}
	
	/**
	 * Calcul l'annuité de l'employé
	 * @return le nombre d'année depuis la date d'embauche
	 */
	public int calculAnnuite()
	{
		int curYear = Calendar.getInstance().get(Calendar.YEAR);
		return curYear - this.dateEmbauche.get(Calendar.YEAR);
	}
}
